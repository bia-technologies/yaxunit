//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2023 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

/////////////////////////////////////////////////////////////////////////////////
// Экспортные процедуры и функции, предназначенные для использования другими 
// объектами конфигурации или другими программами
///////////////////////////////////////////////////////////////////////////////// 
#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	ЮТТесты
		.ДобавитьТест("ПроверитьПредикаты")
		.ДобавитьТест("СообщенияОбОшибках")
	;
	
КонецПроцедуры

Процедура ПроверитьПредикаты() Экспорт
	
	Результат = ЮТПредикатыКлиентСервер.ПроверитьПредикаты(1, ЮТест.Предикат().ИмеетТип("Число").Больше(0).Меньше(2).Равно(1));
	ЮТест.ОжидаетЧто(Результат).Свойство("Успешно").ЭтоИстина();
	
КонецПроцедуры

Процедура СообщенияОбОшибках() Экспорт
	
	Объект = Новый Структура("Число, Пусто, Строка", 3, Неопределено, "123");
	Объект.Вставить("ВложенныйОбъект", Новый Структура("Число", 2));
	Выражения = ЮТПредикаты.Выражения();
	
	Варианты = ЮТест.Варианты("ВидСравнения, Значение, Сообщение, ИмяСвойства")
		.Добавить(Выражения.Равно, 2, "равно `2`")
		.Добавить(Выражения.НеРавно, 3, "не равно `3`")
		.Добавить(Выражения.Заполнено, Неопределено, "является заполненным", "Пусто")
		.Добавить(Выражения.НеЗаполнено, Неопределено, "не является заполненным")
		.Добавить(Выражения.Больше, 3, "больше чем `3`")
		.Добавить(Выражения.БольшеРавно, 5, "больше или равно `5`")
		.Добавить(Выражения.Меньше, 3, "меньше чем `3`")
		.Добавить(Выражения.МеньшеРавно, 2, "меньше или равно `2`")
		.Добавить(Выражения.ИмеетТип, "Строка", "имеет тип `Строка`")
		.Добавить(Выражения.НеИмеетТип, "Число", "не имеет тип `Число`")
		.Добавить(Выражения.ИмеетДлину, 2, "имеет длину (размер) `2`", "Строка")
		.Добавить(Выражения.НеИмеетДлину, 3, "не имеет длину (размер) `3`", "Строка")
		.Добавить(Выражения.ИмеетСвойство, "Строка", "содержит свойство `Строка`", "ВложенныйОбъект")
		.Добавить(Выражения.НеИмеетСвойство, "Число", "не содержит свойство `Число`", "ВложенныйОбъект")
		.Добавить(Выражения.Содержит, "4", "содержит `4`", "Строка")
		.Добавить(Выражения.НеСодержит, "2", "не содержит `2`", "Строка")
	;
	
	Для Каждого Вариант Из Варианты.СписокВариантов() Цикл
		
		ИмяСвойства = ?(Вариант.ИмяСвойства = Неопределено, "Число", Вариант.ИмяСвойства);
		
		Предикат = ЮТФабрика.ВыражениеПредиката(Вариант.ВидСравнения, Неопределено, Вариант.Значение);
		ПроверитьСообщениеОбработкиПредиката(Объект[ИмяСвойства], Предикат, Вариант.Сообщение);
		
		Предикат = ЮТФабрика.ВыражениеПредиката(Вариант.ВидСравнения, ИмяСвойства, Вариант.Значение);
		ПроверитьСообщениеОбработкиПредиката(Объект, Предикат, СтрШаблон("содержит свойство `%1`, которое %2", ИмяСвойства, Вариант.Сообщение));
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьСообщениеОбработкиПредиката(ПроверяемоеЗначение, Предикат, Сообщение)
	
	ПараметрыСообщенийОбОшибке = ЮТПредикатыКлиентСервер.ПараметрыСообщенийОбОшибке();
	РезультатПроверки = ЮТПредикатыКлиентСервер.ПроверитьПредикаты(ПроверяемоеЗначение, Предикат, ПараметрыСообщенийОбОшибке);
	
	Описание = СтрШаблон("Проверка предиката %1 `%2` %3", Предикат.ИмяРеквизита, Предикат.ВидСравнения, Предикат.Значение);
	ОжидаемоеСообщение = СтрШаблон("Ожидали, что проверяемое значение `%1` %2, но это не так.", ПроверяемоеЗначение, Сообщение);
	
	ЮТест.ОжидаетЧто(РезультатПроверки, Описание)
		.Свойство("Успешно").ЭтоЛожь()
		.Свойство("Сообщения").ИмеетДлину(1)
		.Свойство("Сообщения[0].Сообщение").Равно(ОжидаемоеСообщение)
	;
КонецПроцедуры

#КонецОбласти
