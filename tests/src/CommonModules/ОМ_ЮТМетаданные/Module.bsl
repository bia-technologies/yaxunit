//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2024 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	ЮТТесты
		.ДобавитьСерверныйТест("ОписаниеОбъектаМетаданных").СПараметрами(Истина)
		.ДобавитьКлиентскийТест("ОписаниеОбъектаМетаданных").СПараметрами(Ложь)
		.ДобавитьТест("РегистрыДвиженийДокумента")
		.ДобавитьТест("НормализованноеИмяТаблицы")
		;
	
КонецПроцедуры

Процедура ОписаниеОбъектаМетаданных(НаСервере) Экспорт
	
	Данные = ПомощникТестированияВызовСервера.ТестовыеДанныеДляОписаниеОбъектаМетаданных(НаСервере);
	
	Для Каждого Значение Из Данные Цикл
		
		Описание = ЮТМетаданные.ОписаниеОбъектаМетаданных(Значение);
		
		ЮТест.ОжидаетЧто(Описание).Заполнено();
		
	КонецЦикла;
	
	Описание = ЮТМетаданные.ОписаниеОбъектаМетаданных("Справочник.Склады");
	ЮТест.ОжидаетЧто(Описание, "Проверка на общий реквизит")
		.Свойство("Реквизиты")
			.ИмеетСвойство("Организация");
	
КонецПроцедуры

Процедура РегистрыДвиженийДокумента() Экспорт
	
	ЮТест.ОжидаетЧто(ЮТМетаданные.РегистрыДвиженийДокумента("Документ.Заказ"))
		.ИмеетТип("Структура")
		.НеЗаполнено();
	
	ЮТест.ОжидаетЧто(ЮТМетаданные.РегистрыДвиженийДокумента("Документы.ОперацияПоУчетуТоваров"))
		.ИмеетТип("Структура")
		.Заполнено()
		.Свойство("ТоварныеЗапасы").Равно("РегистрНакопления.ТоварныеЗапасы");
	
	ЮТест.ОжидаетЧто(ЮТМетаданные.РегистрыДвиженийДокумента(ПредопределенноеЗначение("Документ.ПриходТовара.ПустаяСсылка")))
		.ИмеетТип("Структура")
		.Заполнено()
		.ИмеетДлину(3)
		.Свойство("ТоварныеЗапасы").Равно("РегистрНакопления.ТоварныеЗапасы")
		.Свойство("Взаиморасчеты").Равно("РегистрНакопления.Взаиморасчеты")
		.Свойство("Основной").Равно("РегистрБухгалтерии.Основной");
	
	ЮТест.ОжидаетЧто(ЮТМетаданные)
		.Метод("РегистрыДвиженийДокумента").Параметр("РегистрНакопления.ТоварныеЗапасы")
		.ВыбрасываетИсключение("Не поддерживается получение движений для РегистрыНакопления.ТоварныеЗапасы");
	
КонецПроцедуры

Процедура НормализованноеИмяТаблицы() Экспорт
	
	Варианты = ЮТКоллекции.ЗначениеВМассиве("Справочник.Банки", "Справочники.Банки", ПредопределенноеЗначение("Справочник.Банки.ПустаяСсылка"));
	
#Если Сервер Тогда
	Варианты.Добавить(Справочники.Банки);
	Варианты.Добавить(Справочники.Банки.СоздатьЭлемент());
#КонецЕсли
	
	Для Каждого Вариант Из Варианты Цикл
		
		Описание = СтрШаблон("%1 (%2)", Вариант, ТипЗнч(Вариант));
		ФактическоеЗначение = ЮТМетаданные.НормализованноеИмяТаблицы(Вариант);
		
		ЮТест.ОжидаетЧто(ФактическоеЗначение, Описание).Равно("Справочник.Банки");
		
	КонецЦикла;
	
	ЮТест.ОжидаетЧто(ЮТМетаданные)
		.Метод("НормализованноеИмяТаблицы").Параметр("123")
		.ВыбрасываетИсключение("Неподдерживаемый параметр метода");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
