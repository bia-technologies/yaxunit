//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2025 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	ЮТТесты.ВТранзакции(Ложь)
		.ДобавитьТест("ЗагрузитьТестыВременнойОбработки")
		.ДобавитьТест("ИсполняемыеСценарииВременнойОбработки")
		.ДобавитьТест("ВыполнитьТестыВременнойОбработки")
	;
	
КонецПроцедуры

Процедура ЗагрузитьТестыВременнойОбработки() Экспорт
	
	Сценарии = СценарииОбработки();
	
	ЮТест.ОжидаетЧто(Сценарии)
		.Заполнено()
		.Свойство("Метаданные").Заполнено()
		.Свойство("Метаданные.Сервер").ЭтоИстина()
		.Свойство("Метаданные.КлиентУправляемоеПриложение").ЭтоЛожь()
		.Свойство("Метаданные.КлиентОбычноеПриложение").ЭтоЛожь()
		.Свойство("НаборыТестов").Заполнено()
		.Свойство("НаборыТестов[0].Тесты").Заполнено()
			.ЛюбойЭлементСодержитСвойствоСоЗначением("Имя", "ТестУспешно")
			.ЛюбойЭлементСодержитСвойствоСоЗначением("Имя", "ТестОшибка")
			.ЛюбойЭлементСодержитСвойствоСоЗначением("Имя", "ТестСломан")
		;
	
КонецПроцедуры

Процедура ИсполняемыеСценарииВременнойОбработки() Экспорт
	
	Сценарии = СценарииОбработки();
	ИсполняемыеСценарии = ЮТИсполнительСлужебныйКлиентСервер.ИсполняемыйТестовыйМодуль(Сценарии);
	ЮТест.ОжидаетЧто(ИсполняемыеСценарии)
		.Заполнено()
		.Свойство("Метаданные").Заполнено()
		.Свойство("Метаданные.Сервер").ЭтоИстина()
		.Свойство("Метаданные.КлиентУправляемоеПриложение").ЭтоЛожь()
		.Свойство("Метаданные.КлиентОбычноеПриложение").ЭтоЛожь()
		.Свойство("НаборыТестов").Заполнено()
		.Свойство("НаборыТестов[0].Тесты").Заполнено()
			.ЛюбойЭлементСодержитСвойствоСоЗначением("Имя", "ТестУспешно")
			.ЛюбойЭлементСодержитСвойствоСоЗначением("Имя", "ТестОшибка")
			.ЛюбойЭлементСодержитСвойствоСоЗначением("Имя", "ТестСломан")
		;
	
КонецПроцедуры

Процедура ВыполнитьТестыВременнойОбработки() Экспорт
	
	ТестовыйМодуль = ЮТест.ОписаниеТекущегоТестовогоМодуля();
	Набор = ЮТест.ОписаниеТекущегоТестовогоНабора();
	Тест = ЮТест.ОписаниеТекущегоТеста();
	Сценарии = СценарииОбработки();
	ИсполняемыеСценарии = ЮТИсполнительСлужебныйКлиентСервер.ИсполняемыйТестовыйМодуль(Сценарии);
	СтатусыИсполненияТеста = ЮТФабрика.СтатусыИсполненияТеста();
	
	Результат = ЮТИсполнительСлужебныйКлиентСервер.ВыполнитьГруппуНаборовТестов(ИсполняемыеСценарии.НаборыТестов, ИсполняемыеСценарии);
	
	ЮТест.ОжидаетЧто(Результат)
		.Заполнено()
		.Что(Результат[0])
			.Свойство("Тесты")
			.Свойство("Тесты[0].Статус").Равно(СтатусыИсполненияТеста.Успешно)
			.Свойство("Тесты[1].Статус").Равно(СтатусыИсполненияТеста.Ошибка)
			.Свойство("Тесты[2].Статус").Равно(СтатусыИсполненияТеста.Сломан)
	;
	
	ЮТСобытияСлужебный.ПередКаждымТестом(ОМ_ВыполнениеТестовОбработки, ТестовыйМодуль, Набор, Тест);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СценарииОбработки()
	
	ИмяОбработки = Обработка();
	ЮТФильтрацияСлужебный.УстановитьКонтекст(Новый Структура("filter", Новый Структура));
	
	ОписаниеМодуля = Новый Структура("Сервер, КлиентУправляемое, КлиентОбычное", Истина, Ложь, Ложь);
	Возврат ЮТИсполнительСлужебныйКлиентСервер.СценарииВнешнейОбработки(ИмяОбработки, ОписаниеМодуля);
	
КонецФункции

Функция Обработка()
	
	Текст =
	"Процедура ИсполняемыеСценарии() Экспорт
	|
	|	ЮТТесты
	|		.ДобавитьТест(""ТестУспешно"")
	|		.ДобавитьТест(""ТестОшибка"")
	|		.ДобавитьТест(""ТестСломан"")
	|	;
	|
	|КонецПроцедуры
	|
	|Процедура ТестУспешно() Экспорт
	|	ЮТест.ОжидаетЧто(1).Равно(1);
	|КонецПроцедуры
	|
	|Процедура ТестОшибка() Экспорт
	|	ЮТест.ОжидаетЧто(1).Равно(2);
	|КонецПроцедуры
	|
	|Процедура ТестСломан() Экспорт
	|	ЮТест.ОжидаетЧто(1).ОтсутствующийМетод(2);
	|КонецПроцедуры
	|";
	
	Данные = ЮТВнешниеОбработкиСлужебныйСервер.СкомпилироватьВнешнююОбработку(Текст, Текст, Текст);
	
	Возврат ВнешниеОбработки.Подключить(ПоместитьВоВременноеХранилище(Данные), "ОМ_ВыполнениеТестовОбработки");
	
КонецФункции

#КонецОбласти
