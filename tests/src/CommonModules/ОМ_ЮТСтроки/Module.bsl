//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2025 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	ЮТТесты
		.ДобавитьТест("ДобавитьСтроку")
		.ДобавитьТест("СтрокаСимволов")
		.ДобавитьТест("СравнитьВерсии")
		.ДобавитьТест("УникальныеСтроки")
		.ДобавитьТест("СоответствуетШаблону")
		.ДобавитьТест("РазделитьСтроку")
		.ДобавитьТест("РусскиеБуквы")
		.ДобавитьТест("АнглийскиеБуквы")
		.ДобавитьТест("Цифры")
		.ДобавитьТест("ВерсияБольше")
		.ДобавитьТест("ЭтоУникальныйИдентификаторСтрокой")
		.ДобавитьТест("ЭтоВалидноеИмяПеременной")
		.ДобавитьТест("ЛокализованноеСообщениеПлатформы")
	;
	
КонецПроцедуры

Процедура ДобавитьСтроку() Экспорт
	
	Варианты = ЮТест.Варианты("Исходная, Дополнение, Разделитель, Результат")
		.Добавить("1", "2", "+", "1+2")
		.Добавить("", "2", "+", "2")
		.Добавить("1", "", "+", "1")
		.Добавить(Неопределено, "2", "+", "2")
		.Добавить("1", "2", Неопределено, "12")
		.СписокВариантов();
	
	Для Каждого Вариант Из Варианты Цикл
		
		Результат = ЮТСтроки.ДобавитьСтроку(Вариант.Исходная, Вариант.Дополнение, Вариант.Разделитель);
		
		Сообщение = СтрШаблон("ДобавитьСтроку(%1, %2, %3)", Вариант.Исходная, Вариант.Дополнение, Вариант.Разделитель);
		ЮТест.ОжидаетЧто(Результат, Сообщение).Равно(Вариант.Результат);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СтрокаСимволов() Экспорт
	
	Варианты = ЮТест.Варианты("Символ, Количество, Результат")
		.Добавить("1", 1, "1")
		.Добавить("12", 0, "")
		.Добавить("12", 2, "1212")
		.СписокВариантов();
		
	Для Каждого Вариант Из Варианты Цикл
		
		Результат = ЮТСтроки.СтрокаСимволов(Вариант.Символ, Вариант.Количество);
		ЮТест.ОжидаетЧто(Результат, СтрШаблон("%1 * %2", Вариант.Символ, Вариант.Количество))
			.Равно(Вариант.Результат);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СравнитьВерсии() Экспорт
	
	Варианты = ЮТест.Варианты("Версия1, Версия2, Результат")
		.Добавить("1", "1", 0)
		.Добавить("1.2.3.4", "1.3", -1)
		.Добавить("1.2.3", "1.2", 1)
		.Добавить("1.2.3.999", "1.2.3.1", 1)
		.Добавить("1.2.3.1", "1.2.3.999", -1)
		.СписокВариантов();
		
	Для Каждого Вариант Из Варианты Цикл
		
		Результат = ЮТСтроки.СравнитьВерсии(Вариант.Версия1, Вариант.Версия2);
		ЮТест.ОжидаетЧто(Результат, СтрШаблон("%1 и %2", Вариант.Версия1, Вариант.Версия2))
			.Равно(Вариант.Результат);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УникальныеСтроки() Экспорт
	
	Вход = СтрРазделить("Раз,раз, раз,проверка", ",");
	
	ЮТест.ОжидаетЧто(ЮТСтроки.УникальныеСтроки(Вход))
		.Содержит("Раз")
		.НеСодержит("раз")
		.Содержит(" раз")
		.Содержит("проверка")
		.ИмеетДлину(3);
	
КонецПроцедуры

Процедура СоответствуетШаблону() Экспорт
	
	Строка = "123321";
	ЮТест.ОжидаетЧто(ЮТСтроки.СоответствуетШаблону(Строка, "*"))
		.ЭтоИстина();
	ЮТест.ОжидаетЧто(ЮТСтроки.СоответствуетШаблону(Строка, "*23321"))
		.ЭтоИстина();
	ЮТест.ОжидаетЧто(ЮТСтроки.СоответствуетШаблону(Строка, "12332*"))
		.ЭтоИстина();
	ЮТест.ОжидаетЧто(ЮТСтроки.СоответствуетШаблону(Строка, "1*32*"))
		.ЭтоИстина();
	ЮТест.ОжидаетЧто(ЮТСтроки.СоответствуетШаблону(Строка, "1*"))
		.ЭтоИстина();
	ЮТест.ОжидаетЧто(ЮТСтроки.СоответствуетШаблону(Строка, "*1"))
		.ЭтоИстина();
	ЮТест.ОжидаетЧто(ЮТСтроки.СоответствуетШаблону(Строка, "1*1"))
		.ЭтоИстина();
	ЮТест.ОжидаетЧто(ЮТСтроки.СоответствуетШаблону(Строка, "2*"))
		.ЭтоЛожь();
	ЮТест.ОжидаетЧто(ЮТСтроки.СоответствуетШаблону(Строка, "*2"))
		.ЭтоЛожь();
	ЮТест.ОжидаетЧто(ЮТСтроки.СоответствуетШаблону(Строка, "*21*"))
		.ЭтоЛожь();
	ЮТест.ОжидаетЧто(ЮТСтроки.СоответствуетШаблону(Строка, "*33*"))
		.ЭтоИстина();
	ЮТест.ОжидаетЧто(ЮТСтроки.СоответствуетШаблону(Строка, "*3*3*"))
		.ЭтоЛожь();
	
КонецПроцедуры

Процедура РазделитьСтроку() Экспорт
	Варианты = ЮТест.Варианты("Строка, Разделитель, ОжидаемыйМассив")
		.Добавить("a;b;c", ";", ЮТКоллекции.ЗначениеВМассиве("a", "b", "c"))
		.Добавить("a; b; c", "; ", ЮТКоллекции.ЗначениеВМассиве("a", "b", "c"))
		.Добавить("", ";", Новый Массив)
		.Добавить(" a ; b ; c ", ";", ЮТКоллекции.ЗначениеВМассиве("a", "b", "c"))
		.СписокВариантов();
	Для Каждого Вариант Из Варианты Цикл
		Результат = ЮТСтроки.РазделитьСтроку(Вариант.Строка, Вариант.Разделитель);
		ЮТест.ОжидаетЧто(Результат, СтрШаблон("РазделитьСтроку(%1, %2)", Вариант.Строка, Вариант.Разделитель))
			.Равно(Вариант.ОжидаемыйМассив);
	КонецЦикла;
КонецПроцедуры

Процедура РусскиеБуквы() Экспорт
	ЮТест.ОжидаетЧто(ЮТСтроки.РусскиеБуквы(Истина, Ложь)).Равно("абвгдеёжзийклмнопрстуфхцчшщъыьэюя");
	ЮТест.ОжидаетЧто(ЮТСтроки.РусскиеБуквы(Ложь, Истина)).Равно("АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ");
	ЮТест.ОжидаетЧто(ЮТСтроки.РусскиеБуквы(Истина, Истина)).Равно("абвгдеёжзийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ");
КонецПроцедуры

Процедура АнглийскиеБуквы() Экспорт
	ЮТест.ОжидаетЧто(ЮТСтроки.АнглийскиеБуквы(Истина, Ложь)).Равно("abcdefghijklmnopqrstuvwxyz");
	ЮТест.ОжидаетЧто(ЮТСтроки.АнглийскиеБуквы(Ложь, Истина)).Равно("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
	ЮТест.ОжидаетЧто(ЮТСтроки.АнглийскиеБуквы(Истина, Истина)).Равно("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ");
КонецПроцедуры

Процедура Цифры() Экспорт
	ЮТест.ОжидаетЧто(ЮТСтроки.Цифры()).Равно("1234567890");
КонецПроцедуры

Процедура ВерсияБольше() Экспорт
	ЮТест.ОжидаетЧто(ЮТСтроки.ВерсияБольше("2.0.0", "1.9.9")).ЭтоИстина();
	ЮТест.ОжидаетЧто(ЮТСтроки.ВерсияБольше("1.0.0", "1.0.0")).ЭтоЛожь();
	ЮТест.ОжидаетЧто(ЮТСтроки.ВерсияБольше("1.0.0", "2.0.0")).ЭтоЛожь();
КонецПроцедуры

Процедура ЭтоУникальныйИдентификаторСтрокой() Экспорт
	ЮТест.ОжидаетЧто(ЮТСтроки.ЭтоУникальныйИдентификаторСтрокой("123e4567-e89b-12d3-a456-426614174000")).ЭтоИстина();
	ЮТест.ОжидаетЧто(ЮТСтроки.ЭтоУникальныйИдентификаторСтрокой("not-a-guid")).ЭтоЛожь();
	ЮТест.ОжидаетЧто(ЮТСтроки.ЭтоУникальныйИдентификаторСтрокой(123)).ЭтоЛожь();
КонецПроцедуры

Процедура ЭтоВалидноеИмяПеременной() Экспорт
	ЮТест.ОжидаетЧто(ЮТСтроки.ЭтоВалидноеИмяПеременной("ИмяПеременной")).ЭтоИстина();
	ЮТест.ОжидаетЧто(ЮТСтроки.ЭтоВалидноеИмяПеременной("1Имя")).ЭтоЛожь();
	ЮТест.ОжидаетЧто(ЮТСтроки.ЭтоВалидноеИмяПеременной("")).ЭтоЛожь();
КонецПроцедуры

Процедура ЛокализованноеСообщениеПлатформы() Экспорт
	ЮТест.ОжидаетЧто(ЮТСтроки.ЛокализованноеСообщениеПлатформы("ru='Привет';en='Hello'")).Равно("Привет");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
