//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2025 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
//	ЮТТесты.Тег("состояние")
//		.ДобавитьТест("ИнициализацияСостояния")
//		.ДобавитьТест("УстановкаЗначенияСостояния")
//		.ДобавитьТест("УдалениеЗначенияСостояния")
//		.ДобавитьТест("ПолучениеЗначенияСостояния")
//		.ДобавитьТест("ПоследняяОшибкаЭтапа")
//		.ДобавитьТест("Зацикливание")
//		.ДобавитьТест("СбросСостояния");
КонецПроцедуры

Процедура ПередТестом() Экспорт
	
	ЮТКонтекстТеста.УстановитьЗначение("СохраненноеСостояние", ЮТТекущееСостояниеИсполненияТестов);
	
КонецПроцедуры

Процедура ПослеТеста() Экспорт
	
	ЮТТекущееСостояниеИсполненияТестов = ЮТКонтекстТеста.Значение("СохраненноеСостояние");
	
КонецПроцедуры

Процедура ИнициализацияСостояния() Экспорт
	Обработчик = Новый Структура;
	ПараметрыИсполнения = Новый Структура;
	Результат = Новый Структура;
	
	ЮТСостояниеИсполненияТестовСлужебный.ИнициализироватьСостояние(Обработчик, ПараметрыИсполнения, Результат);
	
	ТекущееСостояние = ЮТСостояниеИсполненияТестовСлужебный.ТекущееСостояние();
	ЮТест.ОжидаетЧто(ТекущееСостояние, "Состояние не инициализировано")
		.НеРавно(Неопределено)
		.Свойство("Обработчик").Равно(Обработчик)
		.Свойство("ПараметрыИсполнения").Равно(ПараметрыИсполнения)
		.Свойство("Результат").Равно(Результат);
КонецПроцедуры

Процедура УстановкаЗначенияСостояния() Экспорт
	ЮТСостояниеИсполненияТестовСлужебный.ИнициализироватьСостояние(Новый Структура, Новый Структура, Новый Структура);
	Ключ = "ТестовыйКлюч";
	Значение = "ТестовоеЗначение";
	
	ЮТСостояниеИсполненияТестовСлужебный.УстановитьЗначениеСостоянияЭтапа(Ключ, Значение);
	
	ПолученноеЗначение = ЮТСостояниеИсполненияТестовСлужебный.ЗначениеСостоянияЭтапа(Ключ);
	ЮТест.ОжидаетЧто(ПолученноеЗначение, "Значение не установлено")
		.Равно(Значение);
КонецПроцедуры

Процедура УдалениеЗначенияСостояния() Экспорт
	ЮТСостояниеИсполненияТестовСлужебный.ИнициализироватьСостояние(Новый Структура, Новый Структура, Новый Структура);
	Ключ = "ТестовыйКлюч";
	Значение = "ТестовоеЗначение";
	ЮТСостояниеИсполненияТестовСлужебный.УстановитьЗначениеСостоянияЭтапа(Ключ, Значение);
	
	ЮТСостояниеИсполненияТестовСлужебный.УдалитьЗначениеСостоянияЭтапа(Ключ);
	
	ПолученноеЗначение = ЮТСостояниеИсполненияТестовСлужебный.ЗначениеСостоянияЭтапа(Ключ);
	ЮТест.ОжидаетЧто(ПолученноеЗначение, "Значение не удалено")
		.Равно(Неопределено);
КонецПроцедуры

Процедура ПолучениеЗначенияСостояния() Экспорт
	ЮТСостояниеИсполненияТестовСлужебный.ИнициализироватьСостояние(Новый Структура, Новый Структура, Новый Структура);
	Ключ = "ТестовыйКлюч";
	Значение = "ТестовоеЗначение";
	ЗначениеПоУмолчанию = "ЗначениеПоУмолчанию";
	ЮТСостояниеИсполненияТестовСлужебный.УстановитьЗначениеСостоянияЭтапа(Ключ, Значение);
	
	ПолученноеЗначение = ЮТСостояниеИсполненияТестовСлужебный.ЗначениеСостоянияЭтапа(Ключ, ЗначениеПоУмолчанию);
	ПолученноеЗначениеПоУмолчанию = ЮТСостояниеИсполненияТестовСлужебный.ЗначениеСостоянияЭтапа("НесуществующийКлюч", ЗначениеПоУмолчанию);
	
	ЮТест.ОжидаетЧто(ПолученноеЗначение, "Неверное значение")
		.Равно(Значение);
	ЮТест.ОжидаетЧто(ПолученноеЗначениеПоУмолчанию, "Неверное значение по умолчанию")
		.Равно(ЗначениеПоУмолчанию);
КонецПроцедуры

Процедура ПоследняяОшибкаЭтапа() Экспорт
	ЮТСостояниеИсполненияТестовСлужебный.ИнициализироватьСостояние(Новый Структура, Новый Структура, Новый Структура);
	Ошибка = Новый Структура("Сообщение", "Тестовая ошибка");
	ЮТТекущееСостояниеИсполненияТестов.Ошибка = Ошибка;
	
	ПолученнаяОшибка = ЮТСостояниеИсполненияТестовСлужебный.ПоследняяОшибкаЭтапа();
	
	ЮТест.ОжидаетЧто(ПолученнаяОшибка, "Неверная ошибка")
		.Равно(Ошибка);
	ЮТест.ОжидаетЧто(ЮТСостояниеИсполненияТестовСлужебный.ПоследняяОшибкаЭтапа(), "Ошибка не очищена")
		.Равно(Неопределено);
КонецПроцедуры

Процедура Зацикливание() Экспорт
	ЮТСостояниеИсполненияТестовСлужебный.ИнициализироватьСостояние(Новый Структура, Новый Структура, Новый Структура);
	
	Для Счетчик = 1 По 100 Цикл
		Результат = ЮТСостояниеИсполненияТестовСлужебный.Зацикливание();
	КонецЦикла;
	
	ЮТест.ОжидаетЧто(Результат, "Зацикливание не обнаружено")
		.ЭтоИстина();
КонецПроцедуры

Процедура СбросСостояния() Экспорт
	ЮТСостояниеИсполненияТестовСлужебный.ИнициализироватьСостояние(Новый Структура, Новый Структура, Новый Структура);
	
	ЮТСостояниеИсполненияТестовСлужебный.СброситьСостояние();
	
	ТекущееСостояние = ЮТСостояниеИсполненияТестовСлужебный.ТекущееСостояние();
	ЮТест.ОжидаетЧто(ТекущееСостояние, "Состояние не сброшено")
		.Равно(Неопределено);
КонецПроцедуры

#КонецОбласти
