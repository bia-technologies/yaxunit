//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2025 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

// Тестовый модуль для ЮТПредикаты

Процедура ИсполняемыеСценарии() Экспорт
	// Регистрация тестов
	ЮТТесты
		.ДобавитьТест("СозданиеИПрименениеПредиката")
		.ДобавитьТест("ПсевдонимСвойство")
		.ДобавитьТест("Равно_НеРавно")
		.ДобавитьТест("Заполнено_Пусто")
		.ДобавитьТест("Больше_Меньше")
		.ДобавитьТест("БольшеИлиРавно_МеньшеИлиРавно")
		.ДобавитьТест("ИмеетТип_ИмеетТипОтличныйОт")
		.ДобавитьТест("ИмеетДлину_ИмеетДлинуОтличнуюОт")
		.ДобавитьТест("ИмеетСвойство_НеИмеетСвойства")
		.ДобавитьТест("Содержит_НеСодержит")
		.ДобавитьТест("СодержитСтрокуПоШаблону_НеСодержитСтрокуПоШаблону")
		.ДобавитьТест("ВСписке")
		.ДобавитьТест("Между_Варианты")
		.ДобавитьТест("Получить")
		.ДобавитьТест("Выражения")
		.ДобавитьТест("Инициализировать")
	;
КонецПроцедуры

// Проверяем создание и применение предиката
Процедура СозданиеИПрименениеПредиката() Экспорт
	Предикат = ЮТПредикаты.Реквизит("Имя").Равно("Тест").Получить();
	Структура = Новый Структура("Имя", "Тест");
	Результат = Предикат(Структура);
	ЮТест.ОжидаетЧто(Результат, "Предикат должен вернуть Истина для совпадающего значения").ЭтоИстина();
	Структура.Имя = "НеТест";
	Результат = Предикат(Структура);
	ЮТест.ОжидаетЧто(Результат, "Предикат должен вернуть Ложь для несовпадающего значения").ЭтоЛожь();
КонецПроцедуры

// Проверка псевдонима Свойство
Процедура ПсевдонимСвойство() Экспорт
	П1 = ЮТПредикаты.Реквизит("Имя").Равно("Тест").Получить();
	П2 = ЮТПредикаты.Свойство("Имя").Равно("Тест").Получить();
	Структура = Новый Структура("Имя", "Тест");
	ЮТест.ОжидаетЧто(П1(Структура)).Равно(П2(Структура));
КонецПроцедуры

// Проверка Равно и НеРавно
Процедура Равно_НеРавно() Экспорт
	П = ЮТПредикаты.Реквизит("Число").Равно(5).Получить();
	Структура = Новый Структура("Число", 5);
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Число = 6;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
	П = ЮТПредикаты.Реквизит("Число").НеРавно(5).Получить();
	Структура.Число = 6;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Число = 5;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
КонецПроцедуры

// Проверка Заполнено и Пусто
Процедура Заполнено_Пусто() Экспорт
	П = ЮТПредикаты.Реквизит("Строка").Заполнено().Получить();
	Структура = Новый Структура("Строка", "abc");
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Строка = "";
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
	П = ЮТПредикаты.Реквизит("Строка").Пусто().Получить();
	Структура.Строка = "";
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Строка = "abc";
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
КонецПроцедуры

// Проверка Больше и Меньше
Процедура Больше_Меньше() Экспорт
	П = ЮТПредикаты.Реквизит("Число").Больше(10).Получить();
	Структура = Новый Структура("Число", 15);
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Число = 5;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
	П = ЮТПредикаты.Реквизит("Число").Меньше(10).Получить();
	Структура.Число = 5;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Число = 15;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
КонецПроцедуры

// Проверка БольшеИлиРавно и МеньшеИлиРавно
Процедура БольшеИлиРавно_МеньшеИлиРавно() Экспорт
	П = ЮТПредикаты.Реквизит("Число").БольшеИлиРавно(10).Получить();
	Структура = Новый Структура("Число", 10);
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Число = 9;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
	П = ЮТПредикаты.Реквизит("Число").МеньшеИлиРавно(10).Получить();
	Структура.Число = 10;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Число = 11;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
КонецПроцедуры

// Проверка ИмеетТип и ИмеетТипОтличныйОт
Процедура ИмеетТип_ИмеетТипОтличныйОт() Экспорт
	П = ЮТПредикаты.Реквизит("Строка").ИмеетТип("Строка").Получить();
	Структура = Новый Структура("Строка", "abc");
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	П = ЮТПредикаты.Реквизит("Строка").ИмеетТипОтличныйОт("Число").Получить();
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	П = ЮТПредикаты.Реквизит("Строка").ИмеетТипОтличныйОт("Строка").Получить();
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
КонецПроцедуры

// Проверка ИмеетДлину и ИмеетДлинуОтличнуюОт
Процедура ИмеетДлину_ИмеетДлинуОтличнуюОт() Экспорт
	П = ЮТПредикаты.Реквизит("Строка").ИмеетДлину(3).Получить();
	Структура = Новый Структура("Строка", "abc");
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	П = ЮТПредикаты.Реквизит("Строка").ИмеетДлинуОтличнуюОт(2).Получить();
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	П = ЮТПредикаты.Реквизит("Строка").ИмеетДлинуОтличнуюОт(3).Получить();
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
КонецПроцедуры

// Проверка ИмеетСвойство и НеИмеетСвойства
Процедура ИмеетСвойство_НеИмеетСвойства() Экспорт
	П = ЮТПредикаты.Реквизит("Вложенная").ИмеетСвойство("Имя").Получить();
	Структура = Новый Структура("Вложенная", Новый Структура("Имя", "abc"));
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	П = ЮТПредикаты.Реквизит("Вложенная").НеИмеетСвойства("НетТакого").Получить();
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	П = ЮТПредикаты.Реквизит("Вложенная").НеИмеетСвойства("Имя").Получить();
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
КонецПроцедуры

// Проверка Содержит и НеСодержит
Процедура Содержит_НеСодержит() Экспорт
	П = ЮТПредикаты.Реквизит("Строка").Содержит("abc").Получить();
	Структура = Новый Структура("Строка", "abcde");
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	П = ЮТПредикаты.Реквизит("Строка").НеСодержит("xyz").Получить();
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	П = ЮТПредикаты.Реквизит("Строка").НеСодержит("abc").Получить();
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
КонецПроцедуры

// Проверка СодержитСтрокуПоШаблону и НеСодержитСтрокуПоШаблону
Процедура СодержитСтрокуПоШаблону_НеСодержитСтрокуПоШаблону() Экспорт
	П = ЮТПредикаты.Реквизит("Строка").СодержитСтрокуПоШаблону("[a-z]{3}").Получить();
	Структура = Новый Структура("Строка", "abc");
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	П = ЮТПредикаты.Реквизит("Строка").НеСодержитСтрокуПоШаблону("[0-9]+").Получить();
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	П = ЮТПредикаты.Реквизит("Строка").НеСодержитСтрокуПоШаблону("[a-z]{3}").Получить();
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
КонецПроцедуры

// Проверка ВСписке
Процедура ВСписке() Экспорт
	П = ЮТПредикаты.Реквизит("Число").ВСписке(ЮТКоллекции.ЗначениеВМассиве(1,2,3)).Получить();
	Структура = Новый Структура("Число", 2);
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Число = 5;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
КонецПроцедуры

// Проверка Между и вариантов
Процедура Между_Варианты() Экспорт
	П = ЮТПредикаты.Реквизит("Число").Между(1,5).Получить();
	Структура = Новый Структура("Число", 3);
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Число = 1;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Число = 5;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Число = 0;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
	П = ЮТПредикаты.Реквизит("Число").МеждуИсключаяГраницы(1,5).Получить();
	Структура.Число = 3;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Число = 1;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
	П = ЮТПредикаты.Реквизит("Число").МеждуВключаяНачалоГраницы(1,5).Получить();
	Структура.Число = 1;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Число = 5;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
	П = ЮТПредикаты.Реквизит("Число").МеждуВключаяОкончаниеГраницы(1,5).Получить();
	Структура.Число = 5;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоИстина();
	Структура.Число = 1;
	ЮТест.ОжидаетЧто(П(Структура)).ЭтоЛожь();
КонецПроцедуры

// Проверка Получить
Процедура Получить() Экспорт
	П = ЮТПредикаты.Реквизит("Имя").Равно("Тест").Реквизит("Число").Больше(0).Получить();
	Структура = Новый Структура("Имя,Число", "Тест", 5);
	Массив = П;
	ЮТест.ОжидаетЧто(ТипЗнч(Массив)).Равно(Тип("Массив"));
	ЮТест.ОжидаетЧто(Массив[0](Структура)).ЭтоИстина();
	ЮТест.ОжидаетЧто(Массив[1](Структура)).ЭтоИстина();
КонецПроцедуры

// Проверка Выражения
Процедура Выражения() Экспорт
	Выр = ЮТПредикаты.Выражения();
	ЮТест.ОжидаетЧто(Выр.Равно).Равно("Равно");
	ЮТест.ОжидаетЧто(Выр.Больше).Равно("Больше");
	ЮТест.ОжидаетЧто(Выр.Меньше).Равно("Меньше");
	ЮТест.ОжидаетЧто(Выр.ВСписке).Равно("ВСписке");
КонецПроцедуры

// Проверка Инициализировать
Процедура Инициализировать() Экспорт
	Условия = Новый Структура("Имя,Число", "Тест", 5);
	ЮТПредикаты.Инициализировать(Условия);
	П = ЮТПредикаты.Реквизит("Имя").Равно("Тест").Реквизит("Число").Больше(0).Получить();
	Структура = Новый Структура("Имя,Число", "Тест", 5);
	ЮТест.ОжидаетЧто(П[0](Структура)).ЭтоИстина();
	ЮТест.ОжидаетЧто(П[1](Структура)).ЭтоИстина();
КонецПроцедуры
