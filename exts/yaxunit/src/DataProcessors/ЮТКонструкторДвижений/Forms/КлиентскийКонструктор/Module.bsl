//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2025 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

// BSLLS:NonStandardRegion-off
#Область ОписаниеПеременных

// см. ЮТКонструкторТестовыхДанныхСлужебный.НовыйКонтекстКонструктора
&НаКлиенте
Перем Контекст;

#КонецОбласти

//@skip-check module-structure-top-region
#Область ПрограммныйИнтерфейс

#Область УстановкаЗначение

// Добавляет новую запись в набор движений.
// При необходимости можно выполнить установку реквизитов новой записи.
// 
// Параметры:
//  ЗначенияРеквизитов - Структура - Устанавливаемые значения реквизитов новой записи.
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТКонструкторДвижений - Конструктор
&НаКлиенте
Функция ДобавитьСтроку(ЗначенияРеквизитов = Неопределено) Экспорт
	
	ЮТКонструкторТестовыхДанныхСлужебный.ДобавитьСтрокуНабора(Контекст, ЗначенияРеквизитов);
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает значение реквизита текущей записи набора.
// 
// Параметры:
//  ИмяРеквизита - Строка - Имя реквизита записи
//  Значение - Произвольный - Значение реквизита записи
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТКонструкторДвижений - Конструктор
&НаКлиенте
Функция Установить(ИмяРеквизита, Значение) Экспорт
	
	ЮТКонструкторТестовыхДанныхСлужебный.Установить(Контекст, ИмяРеквизита, Значение);
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает значения реквизитов текущей записи набора.
// 
// Параметры:
//  ЗначенияРеквизитов - Структура - Устанавливаемые значения реквизитов
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТКонструкторДвижений - Установить реквизиты
&НаКлиенте
Функция УстановитьРеквизиты(ЗначенияРеквизитов) Экспорт
	
	ЮТКонструкторТестовыхДанныхСлужебный.УстановитьРеквизиты(Контекст, ЗначенияРеквизитов);
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает фиктивное значение реквизита текущей записи набора.
// 
// На основании менеджера и имени реквизита вычисляется его тип, а по типу генерируется фиктивное значение.
// 
// * Для примитивных значение генерируется случайное значение
// * Для ссылочных типов создается новый объект
// * Для перечислений (в том числе системных) выбирается случайно значение перечисления
// 
// Параметры:
//  ИмяРеквизита - Строка - Имя реквизита записи
//  РеквизитыЗаполнения - Структура - Значения реквизитов заполнения создаваемого объекта базы
//                      - Неопределено
//  ОграничениеТипа - Тип, ОписаниеТипов - Испольуется для ограничения типа составного реквизита, будет сгерерировано значение указанного типа
//                  - Неопределено - Будет сгенерировано значение, на основании типа реквизита,
//                                   если реквизит составной, то будет использован случайный тип
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТКонструкторДвижений - Конструктор
&НаКлиенте
Функция Фикция(ИмяРеквизита, РеквизитыЗаполнения = Неопределено, ОграничениеТипа = Неопределено) Экспорт
	
	ЮТКонструкторТестовыхДанныхСлужебный.Фикция(Контекст, ИмяРеквизита, РеквизитыЗаполнения, ОграничениеТипа);
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает фиктивные значения реквизитов текущей записи набора.
// 
// На основании менеджера и имени реквизита вычисляется его тип, а по типу генерируется фиктивное значение.
// 
// * Для примитивных значение генерируется случайное значение
// * Для ссылочных типов создается новый объект
// * Для перечислений (в том числе системных) выбирается случайно значение перечисления
// 
// Параметры:
//  ИменаРеквизитов - Строка - Имена реквизитов записи части разделенные запятыми
//                  - Массив из Строка - Имена реквизитов записи
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТКонструкторДвижений - Конструктор
&НаКлиенте
Функция ФикцияРеквизитов(ИменаРеквизитов) Экспорт
	
	ЮТКонструкторТестовыхДанныхСлужебный.ФикцияРеквизитов(Контекст, ИменаРеквизитов, Ложь);
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает фиктивные значения незаполненных реквизитов текущей записи набора.
// 
// На основании менеджера и имени реквизита вычисляется его тип, а по типу генерируется фиктивное значение.
// 
// * Для примитивных значение генерируется случайное значение
// * Для ссылочных типов создается новый объект
// * Для перечислений (в том числе системных) выбирается случайно значение перечисления
// 
// Параметры:
//  ИменаРеквизитов - Строка - Имена реквизитов записи части разделенные запятыми
//                  - Массив из Строка - Имена реквизитов записи
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТКонструкторДвижений - Конструктор
&НаКлиенте
Функция ФикцияНезаполненных(ИменаРеквизитов) Экспорт
	
	ЮТКонструкторТестовыхДанныхСлужебный.ФикцияРеквизитов(Контекст, ИменаРеквизитов, Истина);
	Возврат ЭтотОбъект;
	
КонецФункции

// Заполняет обязательные поля записи набора фиктивными значениями
// 
// На основании метаданных определяются обязательные поля (Проверка заполнения = Выдавать ошибку),
// для них генерируются и устанавливаются фиктивные значение.
// 
// * Для примитивных значение генерируется случайное значение
// * Для ссылочных типов создается новый объект
// * Для перечислений (в том числе системных) выбирается случайно значение перечисления
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТКонструкторДвижений - Конструктор
&НаКлиенте
Функция ФикцияОбязательныхПолей() Экспорт
	
	ЮТКонструкторТестовыхДанныхСлужебный.ФикцияОбязательныхПолей(Контекст);
	Возврат ЭтотОбъект;
	
КонецФункции

// Устанавливает дополнительное свойство набора записей.
// 
// Параметры:
//  ИмяСвойства - Строка - Имя дополнительного свойства
//  Значение - Произвольный - Значение дополнительного свойства
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ЮТКонструкторТестовыхДанных - Конструктор
&НаКлиенте
Функция УстановитьДополнительноеСвойство(ИмяСвойства, Значение = Неопределено) Экспорт
	
	ЮТКонструкторТестовыхДанныхСлужебный.УстановитьДополнительноеСвойство(Контекст, ИмяСвойства, Значение);
	Возврат ЭтотОбъект;
	
КонецФункции

#КонецОбласти

#Область ПолучениеДанных

// Возвращает данные текущей записи набора.
// 
// Возвращаемое значение:
//  - Структура - Данные записи
&НаКлиенте
Функция ДанныеСтроки() Экспорт
	
	Возврат ЮТКонструкторТестовыхДанныхСлужебный.ДанныеСтрокиКоллекции(Контекст);
	
КонецФункции

// Возвращает данные набора записей.
// 
// Возвращаемое значение:
//  Массив из Структура - Данные набора записей.
&НаКлиенте
Функция Данные() Экспорт
	
	Возврат ЮТКонструкторТестовыхДанныхСлужебный.ДанныеОбъекта(Контекст);
	
КонецФункции

#КонецОбласти

// Записывает движения документа.
// 
// Параметры:
//  ОбменДаннымиЗагрузка - Булево - Записать с признаком `ОбменДанными.Загрузка = Истина`
&НаКлиенте
Процедура Записать(ОбменДаннымиЗагрузка = Ложь) Экспорт
	
	ЮТКонструкторТестовыхДанныхСлужебный.ЗаписатьДвиженияДокумента(Контекст, ОбменДаннымиЗагрузка);
	
КонецПроцедуры

#КонецОбласти

//@skip-check module-structure-top-region
#Область СлужебныйПрограммныйИнтерфейс

&НаКлиенте
Процедура Инициализировать(Документ, ИмяРегистра) Экспорт
	
	Контекст = ЮТКонструкторТестовыхДанныхСлужебный.НовыйКонтекстКонструктораДвижений(Документ, ИмяРегистра);
	
КонецПроцедуры

#КонецОбласти
// BSLLS:NonStandardRegion-on
