//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2025 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

// Собирает информацию об окружения, как сервера, так и клиента.
// 
// Возвращаемое значение:
//  см. ЮТФабрика.НовоеОписаниеОкружения
Функция ОписаниеОкружения() Экспорт
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	ОписаниеСерверногоОкружения = ЮТМетодыСлужебный.ВызватьФункциюКонфигурацииНаСервере("ЮТОкружениеСлужебныйКлиентСервер",
																						"ОписаниеСерверногоОкружения");
	
	Платформа = Платформа(СистемнаяИнформация);
	
	Окружение = ЮТФабрика.НовоеОписаниеОкружения();
	
	Окружение.Конфигурация = ОписаниеСерверногоОкружения.Конфигурация;
	Окружение.ВерсияКонфигурации = ОписаниеСерверногоОкружения.ВерсияКонфигурации;
	Окружение.ВерсияПлатформы = СистемнаяИнформация.ВерсияПриложения;
	Окружение.ИнформационнаяСреда = "DEV";
	Окружение.ТестовыйДвижок = ОписаниеСерверногоОкружения.ТестовыйДвижок;
	Окружение.ВерсияТестовогоДвижка = ОписаниеСерверногоОкружения.ВерсияТестовогоДвижка;
	
	Окружение.ВстроенныйЯзык = ОписаниеСерверногоОкружения.ВстроенныйЯзык;
	
	Окружение.ОперационнаяСистемаКлиент = Платформа.ОперационнаяСистема;
	Окружение.АрхитектураКлиент = Платформа.Архитектура;
	
	Окружение.ОперационнаяСистемаСервер = ОписаниеСерверногоОкружения.ОперационнаяСистема;
	Окружение.АрхитектураСервер = ОписаниеСерверногоОкружения.Архитектура;
	
	Окружение.ФайловаяБаза = ЭтоФайловаяБаза();
	
	Окружение.Расширения = ОписаниеСерверногоОкружения.Расширения;
#Если ВебКлиент Тогда
	Окружение.ВебКлиент = Истина;
#ИначеЕсли ТолстыйКлиентОбычноеПриложение Тогда
	Окружение.ОбычноеПриложение = Истина;
	Окружение.ТолстыйКлиент = Истина;
#ИначеЕсли ТолстыйКлиентУправляемоеПриложение Тогда
	Окружение.ТолстыйКлиент = Истина;
#КонецЕсли
	
	//@skip-check use-non-recommended-method
	Окружение.ВремяЗапуска = ТекущаяДата(); // BSLLS:DeprecatedCurrentDate-off
	
	//@skip-check constructor-function-return-section
	Возврат Окружение;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура Инициализация(ПараметрыЗапуска) Экспорт
	
	Окружение = ОписаниеОкружения();
	ЮТКонтекстСлужебный.УстановитьЗначениеКонтекста("Окружение", Окружение, Истина);
	
КонецПроцедуры

Функция ЭтоФайловаяБаза()
	
	Возврат СтрНайти(Врег(СтрокаСоединенияИнформационнойБазы()), "FILE=") = 1;
	
КонецФункции

Функция Платформа(СистемнаяИнформация) Экспорт
	
	ОперационнаяСистема = Неопределено;
	Архитектура = Неопределено;
	
	Linux = "Linux";
	Windows = "Windows";
	MacOS = "MacOS";
	
	//@skip-check bsl-variable-name-invalid
	x86 = "i386";
	//@skip-check bsl-variable-name-invalid
	x64 = "x86_64";
	
	ТипКлиентскойПлатформы = СистемнаяИнформация.ТипПлатформы;
	
	Если ТипКлиентскойПлатформы = ТипПлатформы.Linux_x86 Тогда
		ОперационнаяСистема = Linux;
		Архитектура = x86;
	ИначеЕсли ТипКлиентскойПлатформы = ТипПлатформы.Linux_x86_64 Тогда
		ОперационнаяСистема = Linux;
		Архитектура = x64;
	ИначеЕсли ТипКлиентскойПлатформы = ТипПлатформы.Windows_x86 Тогда
		ОперационнаяСистема = Windows;
		Архитектура = x86;
	ИначеЕсли ТипКлиентскойПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		ОперационнаяСистема = Windows;
		Архитектура = x64;
	ИначеЕсли ТипКлиентскойПлатформы = ТипПлатформы.MacOS_x86 Тогда
		ОперационнаяСистема = MacOS;
		Архитектура = x86;
	ИначеЕсли ТипКлиентскойПлатформы = ТипПлатформы.MacOS_x86_64 Тогда
		ОперационнаяСистема = MacOS;
		Архитектура = x64;
	Иначе
		ВызватьИсключение "Неподдерживаемый тип платформы";
	КонецЕсли;
	
	Возврат Новый Структура("ОперационнаяСистема, Архитектура", ОперационнаяСистема, Архитектура);
	
КонецФункции

#Если Сервер Тогда
Функция ОписаниеСерверногоОкружения() Экспорт
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	Платформа = Платформа(СистемнаяИнформация);
	
	Окружение = Новый Структура;
	Окружение.Вставить("ОперационнаяСистема", Платформа.ОперационнаяСистема);
	Окружение.Вставить("Архитектура", Платформа.Архитектура);
	
	ЭтоРусскийВстроенныйЯзык = Метаданные.ВариантВстроенногоЯзыка = Метаданные.СвойстваОбъектов.ВариантВстроенногоЯзыка.Русский;
	Окружение.Вставить("ВстроенныйЯзык", Формат(ЭтоРусскийВстроенныйЯзык, "БЛ=en; БИ=ru;"));
	
	Расширение = Метаданные.ОбщиеМодули.ЮТОкружениеСлужебныйКлиентСервер.РасширениеКонфигурации();
	Окружение.Вставить("ТестовыйДвижок", Расширение.Имя);
	Окружение.Вставить("ВерсияТестовогоДвижка", Расширение.Версия);
	Окружение.Вставить("Конфигурация", Метаданные.Представление());
	Окружение.Вставить("ВерсияКонфигурации", Метаданные.Версия);
	
	Окружение.Вставить("Расширения", Новый Массив);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого Расширение Из РасширенияКонфигурации.Получить() Цикл
		ОписаниеРасширения = Новый Структура;
		ОписаниеРасширения.Вставить("Имя", Расширение.Имя);
		ОписаниеРасширения.Вставить("Версия", Расширение.Версия);
		ОписаниеРасширения.Вставить("БезопасныйРежим", Расширение.БезопасныйРежим);
		ОписаниеРасширения.Вставить("ЗащитаОтОпасныхДействий", Строка(Расширение.ЗащитаОтОпасныхДействий.ПредупреждатьОбОпасныхДействиях));
		Окружение.Расширения.Добавить(ОписаниеРасширения);
	КонецЦикла;
	
	Возврат  Окружение;
	
КонецФункции
#КонецЕсли

#КонецОбласти
