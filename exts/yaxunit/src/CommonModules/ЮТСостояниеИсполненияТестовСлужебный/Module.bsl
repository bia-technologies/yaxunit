//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2025 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Функция ТекущееСостояние() Экспорт
	
	//@skip-check undefined-variable
	Возврат ЮТТекущееСостояниеИсполненияТестов;
	
КонецФункции

Процедура УстановитьЗначениеСостоянияЭтапа(Ключ, Значение) Экспорт
	
	ТекущееСостояние = ТекущееСостояние();
	Если ТекущееСостояние = Неопределено Тогда
		ВызватьИсключение "Текущее состояние исполнения тестов не инициализировано";
	Иначе
		ТекущееСостояние.Состояние.Вставить(Ключ, Значение);
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьЗначениеСостоянияЭтапа(Ключ) Экспорт
	
	ТекущееСостояние = ТекущееСостояние();
	Если ТекущееСостояние = Неопределено Тогда
		ВызватьИсключение "Текущее состояние исполнения тестов не инициализировано";
	Иначе
		ТекущееСостояние.Состояние.Удалить(Ключ);
	КонецЕсли;
	
КонецПроцедуры

Функция ЗначениеСостоянияЭтапа(ИмяРеквизита, ЗначениеПоУмолчанию = Неопределено) Экспорт
	
	ТекущееСостояние = ТекущееСостояние();
	Если ТекущееСостояние = Неопределено Тогда
		ВызватьИсключение "Текущее состояние исполнения тестов не инициализировано";
	Иначе
		Возврат ЮТКоллекции.ЗначениеСтруктуры(ТекущееСостояние.Состояние, ИмяРеквизита, ЗначениеПоУмолчанию);
	КонецЕсли;
	
КонецФункции

Функция ПоследняяОшибкаЭтапа() Экспорт
	
	Если ЮТТекущееСостояниеИсполненияТестов <> Неопределено Тогда
		Ошибка = ЮТТекущееСостояниеИсполненияТестов.Ошибка;
		ЮТТекущееСостояниеИсполненияТестов.Ошибка = Неопределено;
	Иначе
		Ошибка = Неопределено;
	КонецЕсли;
	
	Возврат Ошибка;
	
КонецФункции

Функция Зацикливание() Экспорт
	
	КритерийЗацикливания = 100;
	
	Состояние = ТекущееСостояние();
	Состояние.СчетчикЗацикливания = Состояние.СчетчикЗацикливания + 1;
	
	Возврат Состояние.СчетчикЗацикливания >= КритерийЗацикливания;
	
КонецФункции

Процедура СбросЗацикливания() Экспорт
	
	ТекущееСостояние().СчетчикЗацикливания = 0;
	
КонецПроцедуры

Процедура ИнициализироватьСостояние(Обработчик, ПараметрыИсполнения, Результат) Экспорт
	
	ЮТТекущееСостояниеИсполненияТестов = Новый Структура("Обработчик, ПараметрыИсполнения, Результат", Обработчик, ПараметрыИсполнения, Результат);
	ЮТТекущееСостояниеИсполненияТестов.Вставить("Состояние", Новый Структура);
	ЮТТекущееСостояниеИсполненияТестов.Вставить("СчетчикЗацикливания", 0);
	ЮТТекущееСостояниеИсполненияТестов.Вставить("Ошибка", Неопределено);
	
КонецПроцедуры

Процедура СброситьСостояние() Экспорт
	
	ЮТТекущееСостояниеИсполненияТестов = Неопределено;
	ЮТКонтекстСлужебный.УдалитьКонтекст();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
