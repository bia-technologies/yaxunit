//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2024 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

// Проверить тип параметра.
// 
// Параметры:
//  Значение - Произвольный
//  ОжидаемыйТип - Тип, ОписаниеТипов - Ожидаемый тип или описание типа
//               - Строка - Имена типов разделенные запятой
//  ИмяМетода - Строка
//  ИмяПараметра - Строка
//  ЕслиУстановлен - Булево - Выполнять проверку только если значение не неопределено
Процедура ПроверитьТипПараметра(Значение, ОжидаемыйТип, ИмяМетода, ИмяПараметра, ЕслиУстановлен = Ложь) Экспорт
	
	Если ЕслиУстановлен И Значение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Соответствует = ТипЗначенияСоответствует(Значение, ОжидаемыйТип);
	
	Если НЕ Соответствует Тогда
		ТекстОшибки = СтрШаблон("Некорректный тип параметра `%1` метода `%2`. Метод принимает `%3`, а получили `%4` (%5)",
								ИмяПараметра,
								ИмяМетода,
								ОжидаемыйТип,
								ТипЗнч(Значение),
								Значение);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

Функция ТипЗначенияСоответствует(Значение, ОжидаемыйТип) Экспорт
	
	ТипОжидаемогоТипа = ТипЗнч(ОжидаемыйТип);
	
	Если ТипОжидаемогоТипа = Тип("Строка") Тогда
		Если СтрНайти(ОжидаемыйТип, ",") Тогда
			ОжидаемыйТип = Новый ОписаниеТипов(ОжидаемыйТип);
			ТипОжидаемогоТипа = Тип("ОписаниеТипов");
		Иначе
			ОжидаемыйТип = Тип(ОжидаемыйТип);
			ТипОжидаемогоТипа = Тип("Тип");
		КонецЕсли;
	КонецЕсли;
	
	ТипЗначения = ТипЗнч(Значение);
	
	Если ТипОжидаемогоТипа = Тип("ОписаниеТипов") Тогда
		// СодержитТип не подходит, всегда выдает истину если проверяем Тип("Неопределено")
		Соответствует = ОжидаемыйТип.Типы().Найти(ТипЗначения) <> Неопределено
			И ОжидаемыйТип.ПривестиЗначение(Значение) = Значение;
	Иначе
		Соответствует = ТипЗначения = ОжидаемыйТип;
	КонецЕсли;
	
	Возврат Соответствует;
	
КонецФункции

#КонецОбласти
