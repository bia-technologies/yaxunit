//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2025 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область ПрограммныйИнтерфейс

// Уровни критичности Allure
// 
// Возвращаемое значение:
//  Структура - Уровни серьезности:
// * Trivial - Строка
// * Minor - Строка
// * Normal - Строка
// * Critical - Строка
// * Blocker - Строка
// * Тривиальный - Строка
// * Незначительный - Строка
// * Нормальный - Строка
// * Критический - Строка
// * Блокер - Строка
Функция УровниСерьезности() Экспорт
	
	Серьезность = Новый Структура;
	Серьезность.Вставить("Trivial", "trivial");
	Серьезность.Вставить("Minor", "minor");
	Серьезность.Вставить("Normal", "normal");
	Серьезность.Вставить("Critical", "critical");
	Серьезность.Вставить("Blocker", "blocker");
	
	Серьезность.Вставить("Тривиальный", "trivial");
	Серьезность.Вставить("Незначительный", "minor");
	Серьезность.Вставить("Нормальный", "normal");
	Серьезность.Вставить("Критический", "critical");
	Серьезность.Вставить("Блокер", "blocker");
	
	Возврат Серьезность;
	
КонецФункции

// Доступные свойства Allure
// 
// Возвращаемое значение:
//  Структура - Свойства:
// * Идентификатор - Строка
// * Описание - Строка
// * ОписаниеHTML - Строка
// * Серьезность - Строка
// * Владелец - Строка
// * TestCaseId - Строка
// * Description - Строка
// * DescriptionHtml - Строка
// * Severity - Строка
// * Owner - Строка
// * Epic - Строка
// * Feature - Строка
// * Story - Строка
// * Эпик - Строка
// * Функциональность - Строка
// * История - Строка
// * РодительскийНабор - Строка
// * Набор - Строка
// * ПодчиненныйНабор - Строка
// * ParentSuite - Строка
// * Suite - Строка
// * SubSuite - Строка
// * Package - Строка
// * Пакет - Строка
Функция Свойства() Экспорт
	
	Свойства = Новый Структура;
	
	Свойства.Вставить("Идентификатор", "testCaseId");
	Свойства.Вставить("Описание", "description");
	Свойства.Вставить("ОписаниеHTML", "descriptionHtml");
	Свойства.Вставить("Серьезность", "severity");
	Свойства.Вставить("Владелец", "owner");
	
	Свойства.Вставить("TestCaseId", "testCaseId");
	Свойства.Вставить("Description", "description");
	Свойства.Вставить("DescriptionHtml", "descriptionHtml");
	Свойства.Вставить("Severity", "severity");
	Свойства.Вставить("Owner", "owner");
	
	Свойства.Вставить("Epic", "epic");
	Свойства.Вставить("Feature", "feature");
	Свойства.Вставить("Story", "story");
	
	Свойства.Вставить("Эпик", "epic");
	Свойства.Вставить("Функциональность", "feature");
	Свойства.Вставить("История", "story");
	
	Свойства.Вставить("РодительскийНабор", "parentSuite");
	Свойства.Вставить("Набор", "suite");
	Свойства.Вставить("ПодчиненныйНабор", "subSuite");
	Свойства.Вставить("ParentSuite", "parentSuite");
	Свойства.Вставить("Suite", "suite");
	Свойства.Вставить("SubSuite", "subSuite");
	
	Свойства.Вставить("Package", "package");
	Свойства.Вставить("Пакет", "package");
	
	Возврат Свойства;
	
КонецФункции

// Устанавливает владельца теста
// 
// Параметры:
//  Значение - Строка - Имя владельца теста
Процедура Владелец(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Владелец, Значение);
	
КонецПроцедуры

// Устанавливает идентификатор тест-кейса
// 
// Параметры:
//  Значение - Строка - Идентификатор тест-кейса
Процедура Идентификатор(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Идентификатор, Значение);
	
КонецПроцедуры

// Устанавливает текстовое описание теста
// 
// Параметры:
//  Значение - Строка - Текстовое описание теста
Процедура Описание(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Описание, Значение);
	
КонецПроцедуры

// Устанавливает HTML-описание теста
// 
// Параметры:
//  Значение - Строка - HTML-описание теста
Процедура ОписаниеHTML(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().ОписаниеHTML, Значение);
	
КонецПроцедуры

// Устанавливает уровень критичности теста
// 
// Параметры:
//  Значение - Строка - Уровень критичности теста (см. УровниСерьезности))
Процедура Серьезность(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Серьезность, Значение);
	
КонецПроцедуры

// Устанавливает эпик теста
// 
// Параметры:
//  Значение - Строка - Название эпика
Процедура Epic(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Epic, Значение);
	
КонецПроцедуры

// Устанавливает функциональность теста
// 
// Параметры:
//  Значение - Строка - Название функциональности
Процедура Feature(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Feature, Значение);
	
КонецПроцедуры

// Устанавливает историю теста
// 
// Параметры:
//  Значение - Строка - Название истории
Процедура Story(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Story, Значение);
	
КонецПроцедуры

// Устанавливает эпик теста
// 
// Параметры:
//  Значение - Строка - Название эпика
Процедура Эпик(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Эпик, Значение);
	
КонецПроцедуры

// Устанавливает функциональность теста
// 
// Параметры:
//  Значение - Строка - Название функциональности
Процедура Функциональность(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Функциональность, Значение);
	
КонецПроцедуры

// Устанавливает историю теста
// 
// Параметры:
//  Значение - Строка - Название истории
Процедура История(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().История, Значение);
	
КонецПроцедуры

// Устанавливает родительский набор тестов
// 
// Параметры:
//  Значение - Строка - Название родительского набора
Процедура РодительскийНабор(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().РодительскийНабор, Значение);
	
КонецПроцедуры

// Устанавливает набор тестов
// 
// Параметры:
//  Значение - Строка - Название набора
Процедура Набор(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Набор, Значение);
	
КонецПроцедуры

// Устанавливает подчиненный набор тестов
// 
// Параметры:
//  Значение - Строка - Название подчиненного набора
Процедура ПодчиненныйНабор(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().ПодчиненныйНабор, Значение);
	
КонецПроцедуры

// Устанавливает пакет тестов
// 
// Параметры:
//  Значение - Строка - Название пакета
Процедура Пакет(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Пакет, Значение);
	
КонецПроцедуры

// Устанавливает идентификатор тест-кейса
// 
// Параметры:
//  Значение - Строка - Идентификатор тест-кейса
Процедура TestCaseId(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().TestCaseId, Значение);
	
КонецПроцедуры

// Устанавливает текстовое описание теста
// 
// Параметры:
//  Значение - Строка - Текстовое описание теста
Процедура Description(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Description, Значение);
	
КонецПроцедуры

// Устанавливает HTML-описание теста
// 
// Параметры:
//  Значение - Строка - HTML-описание теста
Процедура DescriptionHtml(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().DescriptionHtml, Значение);
	
КонецПроцедуры

// Устанавливает уровень критичности теста
// 
// Параметры:
//  Значение - Строка - Уровень критичности теста (см. УровниСерьезности)
Процедура Severity(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Severity, Значение);
	
КонецПроцедуры

// Устанавливает владельца теста
// 
// Параметры:
//  Значение - Строка - Имя владельца теста
Процедура Owner(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Owner, Значение);
	
КонецПроцедуры

// Устанавливает родительский набор тестов
// 
// Параметры:
//  Значение - Строка - Название родительского набора
Процедура ParentSuite(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().ParentSuite, Значение);
	
КонецПроцедуры

// Устанавливает набор тестов
// 
// Параметры:
//  Значение - Строка - Название набора
Процедура Suite(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Suite, Значение);
	
КонецПроцедуры

// Устанавливает подчиненный набор тестов
// 
// Параметры:
//  Значение - Строка - Название подчиненного набора
Процедура SubSuite(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().SubSuite, Значение);
	
КонецПроцедуры

// Устанавливает пакет тестов
// 
// Параметры:
//  Значение - Строка - Название пакета
Процедура Package(Значение) Экспорт
	
	УстановитьСвойствоИсполняемогоОбъекта(Свойства().Package, Значение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьСвойствоИсполняемогоОбъекта(Ключ, Значение)
	
	ЮТКонтекстСлужебный.КонтекстИсполненияТекущегоУровня().СвойстваAllure.Вставить(Ключ, Значение);
	
КонецПроцедуры

#КонецОбласти
