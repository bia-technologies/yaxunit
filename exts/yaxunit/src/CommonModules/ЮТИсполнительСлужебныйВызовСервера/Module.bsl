//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2025 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

// Выполняет тесты наборов модуля. Возвращает результат прогона
// Это обертка для прогона на сервере
// 
// Параметры:
//  ИдентификаторыТестовыхНаборов - Массив из Строка - Идентификаторы тестовых наборов, см. ЮТИсполнительСлужебныйСервер.СерверноеХранилищеТестов
//  ИдентификаторТестовогоМодуля - Строка - Идентификатор тестового модуля, см. ЮТИсполнительСлужебныйСервер.СерверноеХранилищеТестов
//  ПродолжениеВыполнения - Булево - Продолжение выполнение тестирования модуля после критической ошибки в нем
//  Ошибка - ИнформацияОбОшибке - Информация о критической ошибке
// 
// Возвращаемое значение:
//  Массив из см. ЮТФабрика.ОписаниеИсполняемогоНабораТестов - Результат прогона наборов тестов
Функция ВыполнитьГруппуНаборовТестов(Знач ИдентификаторыТестовыхНаборов, Знач ИдентификаторТестовогоМодуля, Знач ПродолжениеВыполнения, Знач Ошибка) Экспорт
	
	Хранилище = ЮТИсполнительСлужебныйСервер.СерверноеХранилищеТестов();
	
	ТестовыйМодуль = Хранилище[ИдентификаторТестовогоМодуля];
	Наборы = Новый Массив();
	
	Для Каждого Идентификатор Из ИдентификаторыТестовыхНаборов Цикл
		Наборы.Добавить(Хранилище[Идентификатор]);
	КонецЦикла;
	
	Возврат ЮТИсполнительСлужебныйКлиентСервер.ВыполнитьГруппуНаборовТестов(Наборы, ТестовыйМодуль, ПродолжениеВыполнения, Ошибка);
	
КонецФункции

// Сохранить информацию о тестовых сценариях.
// 
// Параметры:
//  ТестовыеМодули - Массив из см. ЮТФабрика.ОписаниеИсполняемогоТестовогоМодуля
Процедура СохранитьИнформациюОТестовыхСценариях(Знач ТестовыеМодули) Экспорт
	
	ЮТИсполнительСлужебныйСервер.СохранитьИнформациюОТестовыхСценариях(ТестовыеМодули);
	
КонецПроцедуры

Функция СоздатьВнешнююОбработку(Знач ОписаниеМодуля) Экспорт
	
	ТекстМодуляОбъект = ?(ОписаниеМодуля.Сервер, ОписаниеМодуля.Текст, "");
	ТекстМодуляОбычнойФормы = ?(ОписаниеМодуля.КлиентОбычное, ОписаниеМодуля.Текст, "");
	ТекстМодуляУправляемойФормы = ?(ОписаниеМодуля.КлиентУправляемое, ОписаниеМодуля.Текст, "");
	
	Данные = ЮТВнешниеОбработкиСлужебныйСервер.СкомпилироватьВнешнююОбработку(ТекстМодуляОбъект,
																						 ТекстМодуляОбычнойФормы,
																						 ТекстМодуляУправляемойФормы);
	Возврат ВнешниеОбработки.Подключить(ПоместитьВоВременноеХранилище(Данные), ОписаниеМодуля.ИмяМодуля, Ложь);
	
КонецФункции

Функция СценарииВнешнейОбработки(Знач ИмяОбработки, Знач ОписаниеМодуля) Экспорт
	
	Возврат ЮТИсполнительСлужебныйКлиентСервер.СценарииВнешнейОбработки(ИмяОбработки, ОписаниеМодуля);
	
КонецФункции

#КонецОбласти
