//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2025 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область ПрограммныйИнтерфейс

// Возвращает информацию об окружении
// 
// Возвращаемое значение:
//  см. ЮТФабрика.НовоеОписаниеОкружения
Функция ОписаниеОкружения() Экспорт
	
	//@skip-check constructor-function-return-section
	ЗначениеКонтекста = ЮТКонтекстСлужебный.ЗначениеКонтекста("Окружение");
	Если ЗначениеКонтекста = Неопределено Тогда // TODO Реализовать кеширование при использовании вне тестов
		// Получаем явно окружение.
		ЗначениеКонтекста = ЮТОкружениеСлужебныйКлиентСервер.ОписаниеОкружения();
	КонецЕсли;
	
	Возврат ЗначениеКонтекста;
	
КонецФункции

// Версия платформы.
// 
// Возвращаемое значение:
//  Строка - Версия платформы
Функция ВерсияПлатформы() Экспорт
	
	Возврат ЮТСлужебныйПовторногоИспользования.ВерсияПлатформы();
	
КонецФункции

// Проверяет версию платформы (без учета режима совместимости)
// 
// Параметры:
//  ВерсияДляПроверки - Строка - Версия, с которой необходимо сравнить версию платформы
// 
// Возвращаемое значение:
//  Булево - Версия платформы больше или равна указанной
Функция ВерсияПлатформыБольшеИлиРавна(ВерсияДляПроверки) Экспорт
	
	Возврат ЮТСтроки.СравнитьВерсии(ЮТСлужебныйПовторногоИспользования.ВерсияПлатформы(), ВерсияДляПроверки) >= 0;
	
КонецФункции

// Проверяет версию платформы (без учета режима совместимости)
// 
// Параметры:
//  ВерсияДляПроверки - Строка - Версия, с которой необходимо сравнить версию платформы
// 
// Возвращаемое значение:
//  Булево - Версия платформы меньше указанной
Функция ВерсияПлатформыМеньше(ВерсияДляПроверки) Экспорт
	
	Возврат ЮТСтроки.СравнитьВерсии(ЮТСлужебныйПовторногоИспользования.ВерсияПлатформы(), ВерсияДляПроверки) < 0;
	
КонецФункции

// Используется английский встроенный язык разработки.
// 
// Возвращаемое значение:
//  Булево - Используется английский встроенный язык
Функция ИспользуетсяАнглийскийВстроенныйЯзык() Экспорт
	
	Возврат СтрСравнить(ОписаниеОкружения().ВстроенныйЯзык, "en") = 0;
	
КонецФункции

// Используется русский встроенный язык разработки.
// 
// Возвращаемое значение:
//  Булево - Используется русский встроенный язык
Функция ИспользуетсяРусскийВстроенныйЯзык() Экспорт
	
	Возврат СтрСравнить(ОписаниеОкружения().ВстроенныйЯзык, "ru") = 0;
	
КонецФункции

// Проверяет тип текущей операционной системы
// 
// Возвращаемое значение:
//  Булево
Функция ЭтоWindows() Экспорт
	
	Информация = Новый СистемнаяИнформация();
	Возврат Информация.ТипПлатформы = ТипПлатформы.Windows_x86 Или Информация.ТипПлатформы = ТипПлатформы.Windows_x86_64;
	
КонецФункции

// Проверяет тип текущей операционной системы
// 
// Возвращаемое значение:
//  Булево
Функция ЭтоLinux() Экспорт
	
	Информация = Новый СистемнаяИнформация();
	Возврат Информация.ТипПлатформы = ТипПлатформы.Linux_x86 Или Информация.ТипПлатформы = ТипПлатформы.Linux_x86_64;
	
КонецФункции

// Проверяет тип текущей операционной системы
// 
// Возвращаемое значение:
//  Булево
Функция ЭтоMac() Экспорт
	
	Информация = Новый СистемнаяИнформация();
	Возврат Информация.ТипПлатформы = ТипПлатформы.MacOS_x86 Или Информация.ТипПлатформы = ТипПлатформы.MacOS_x86_64;
	
КонецФункции

// Возвращает код языка интерфейса.
// 
// Возвращаемое значение:
//  Строка - Локаль интерфейса
Функция ЛокальИнтерфейса() Экспорт
	
#Если ТонкийКлиент Или ВебКлиент Тогда
	Возврат ТекущийЯзык();
#Иначе
	Возврат ТекущийЯзык().КодЯзыка;
#КонецЕсли
	
КонецФункции

// Возвращает код языка платформы.
// 
// Возвращаемое значение:
//  Строка - Локаль платформы
Функция ЛокальПлатформы() Экспорт
	
	Возврат ТекущийЯзыкСистемы();
	
КонецФункции

// Используется английская локаль платформы.
// 
// Возвращаемое значение:
//  Булево - Используется английская локаль платформы
Функция ИспользуетсяАнглийскаяЛокальПлатформы() Экспорт
	
	Возврат ЛокальПлатформы() = "en";
	
КонецФункции

// Используется русская локаль платформы.
// 
// Возвращаемое значение:
//  Булево - Используется русская локаль платформы
Функция ИспользуетсяРусскаяЛокальПлатформы() Экспорт
	
	Возврат ЛокальПлатформы() = "ru";
	
КонецФункции

// Используется файловая база.
// 
// Возвращаемое значение:
//  Булево - Это файловая база
Функция ЭтоФайловаяБаза() Экспорт
	
	Возврат ОписаниеОкружения().ФайловаяБаза;
	
КонецФункции

#КонецОбласти
