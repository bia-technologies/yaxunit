//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2024 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область ПрограммныйИнтерфейс

// Выполняет вызов метода модуля конфигурации
// 
// Параметры:
//  ИмяМодуля - Строка - Имя модуля
//  ИмяМетода - Строка - Имя метода
//  Параметры - Неопределено - Вызов метода без параметров
//            - Массив из Произвольный - Параметры вызова метода
//                В качестве конструктора параметров можно использовать см. МассивПараметров
Процедура ВызватьМетодМодуля(ИмяМодуля, ИмяМетода, Параметры = Неопределено) Экспорт
	
#Если ВебКлиент Тогда
	ВызватьИсключение ЮТИсключения.МетодНеДоступен("ЮТМетоды.ВызватьМетодМодуля");
#КонецЕсли
	
	ЮТМетодыСлужебный.ВыполнитьМетодКонфигурации(ИмяМодуля, ИмяМетода, Параметры);
	
КонецПроцедуры

// Выполняет вызов метода указанного объекта
// 
// Параметры:
//  Объект - Строка - Объект, метод которого необходимо вызвать
//  ИмяМетода - Строка - Имя метода
//  Параметры - Неопределено - Вызов метода без параметров
//            - Массив из Произвольный - Параметры вызова метода
//                В качестве конструктора параметров можно использовать см. МассивПараметров
Процедура ВызватьМетодОбъекта(Объект, ИмяМетода, Параметры = Неопределено) Экспорт
	
#Если ВебКлиент Тогда
	ВызватьИсключение ЮТИсключения.МетодНеДоступен("ЮТМетоды.ВызватьМетодОбъекта");
#КонецЕсли
	
	ЮТМетодыСлужебный.ВыполнитьМетодОбъекта(Объект, ИмяМетода, Параметры);
	
КонецПроцедуры

// Формирует массив параметров. Применяется при обучении (настройке) мокито.
// Если параметр пропущен, то будет использовать параметр по умолчанию.
// 
// Параметры:
//  Параметр1 - Произвольный
//  Параметр2 - Произвольный
//  Параметр3 - Произвольный
//  Параметр4 - Произвольный
//  Параметр5 - Произвольный
//  Параметр6 - Произвольный
//  Параметр7 - Произвольный
//  Параметр8 - Произвольный
//  Параметр9 - Произвольный
//  Параметр10 - Произвольный
// 
// Возвращаемое значение:
//  Массив из Произвольный - Массив параметров
//@skip-check method-too-many-params
// BSLLS:NumberOfOptionalParams-off
// BSLLS:NumberOfParams-off
// BSLLS:DuplicateStringLiteral-off
Функция МассивПараметров(Параметр1 = "_!%*",
						 Параметр2 = "_!%*",
						 Параметр3 = "_!%*",
						 Параметр4 = "_!%*",
						 Параметр5 = "_!%*",
						 Параметр6 = "_!%*",
						 Параметр7 = "_!%*",
						 Параметр8 = "_!%*",
						 Параметр9 = "_!%*",
						 Параметр10 = "_!%*") Экспорт
	
	Возврат ЮТОбщийСлужебный.ЗначениеВМассивеПоУмолчанию(ПараметрПоУмолчанию(),
														 Параметр1,
														 Параметр2,
														 Параметр3,
														 Параметр4,
														 Параметр5,
														 Параметр6,
														 Параметр7,
														 Параметр8,
														 Параметр9,
														 Параметр10);
	
КонецФункции
// BSLLS:DuplicateStringLiteral-on
// BSLLS:NumberOfParams-on
// BSLLS:NumberOfOptionalParams-on

// Возвращает идентификатор значения входного параметра по умолчанию.
//
// Возвращаемое значение:
//  Строка
//
// Примеры:
//
// ЮТТесты.ДобавитьТест("Тест1")
// 	.СПараметрами(
// 		Мокито.ПараметрПоУмолчанию(),
// 		2); // Будет зарегистрирован один тест с параметрами <значение по умолчанию>, 2
//
Функция ПараметрПоУмолчанию() Экспорт
	
	Возврат "<[ЗначениеВходногоПараметраПоУмолчанию]>";
	
КонецФункции

// Вызывает функцию модуля конфигурации
// И воззвращает результат работы метода
// 
// Параметры:
//  ИмяМодуля - Строка - Имя модуля
//  ИмяМетода - Строка - Имя метода
//  Параметры - Массив из Произвольный - Параметры метода
// 
// Возвращаемое значение:
//  Произвольный - Результат функции
Функция ВызватьФункциюКонфигурации(ИмяМодуля, ИмяМетода, Параметры = Неопределено) Экспорт
	
	Возврат ЮТМетодыСлужебный.ВызватьФункциюКонфигурации(ИмяМодуля, ИмяМетода, Параметры);
	
КонецФункции

#КонецОбласти
