//©///////////////////////////////////////////////////////////////////////////©//
//
//  Copyright 2021-2024 BIA-Technologies Limited Liability Company
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//©///////////////////////////////////////////////////////////////////////////©//

#Область СлужебныйПрограммныйИнтерфейс

Функция ТипыТестов() Экспорт
	
	ПараметрыТестов = ПереопределеннаяНастройка(ЮТДымовыеТесты.ПараметрыДымовыхТестов(), "ОткрытиеФорм");
	ПараметрыЗагрузки = ПараметрыЗагрузки();
	ТипыМетаданных = ЮТМетаданные.ТипыМетаданных();
	
	ОписанияКоллекций = Новый Массив;
	
	Для Каждого ИмяКоллекции Из ПараметрыЗагрузки.КоллекцииМетаданных Цикл
		
		Настройка = ПереопределеннаяНастройка(ПараметрыТестов, ИмяКоллекции);
		
		Если НЕ Настройка.Использовать Тогда
			Продолжить;
		КонецЕсли;
		
		ОписанияОбъектов = ОбработатьКоллекциюМетаданных(ИмяКоллекции, Настройка, ПараметрыЗагрузки);
		
		Если ЗначениеЗаполнено(ОписанияОбъектов) Тогда
			Описание = Новый Структура("ИмяКоллекции, Тип, Объекты", ИмяКоллекции, ТипыМетаданных[ИмяКоллекции].Имя, ОписанияОбъектов);
			ОписанияКоллекций.Добавить(Описание);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ОписанияКоллекций;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПараметрыНастройки

Функция ПараметрыЗагрузки()
	
	Параметры = Новый Структура;
	
	ЗагрузитьТипыТестовМетаданных(Параметры);
	ЗагрузитьПараметрыТиповТестов(Параметры);
	
	ВидыФорм = Новый Массив;
	
	Для Каждого ПараметрыТипТеста Из Параметры.ПараметрыТиповТестов Цикл
		
		Если ВидыФорм.Найти(ПараметрыТипТеста.Значение.ВидФормы) = Неопределено Тогда
			ВидыФорм.Добавить(ПараметрыТипТеста.Значение.ВидФормы);
		КонецЕсли;
		
	КонецЦикла;
	
	Параметры.Вставить("ВидыФорм", ВидыФорм);
	
	Окружение = ЮТОкружение.ОписаниеОкружения();
	ДоступныОбычныеФормы = Метаданные.ИспользоватьОбычныеФормыВУправляемомПриложении И Окружение.ТолстыйКлиент;
	ДоступныУправляемыеФормы = Метаданные.ИспользоватьУправляемыеФормыВОбычномПриложении;
	
	Параметры.Вставить("ЭтоОбычноеПриложение", Окружение.ОбычноеПриложение);
	Параметры.Вставить("ДоступныОбычныеФормы", ДоступныОбычныеФормы);
	Параметры.Вставить("ДоступныУправляемыеФормы", ДоступныУправляемыеФормы);
	
	Возврат Параметры;
	
КонецФункции

Процедура ЗагрузитьТипыТестовМетаданных(ПараметрыЗагрузки)
	
	Макет = ПолучитьОбщийМакет("ДТОткрытиеФормТипыТестов").ПолучитьТекст();
	ДанныеМакета = ЮТТестовыеДанные.ТаблицаMarkDown(Макет);
	
	ТипыТестов = ДТОткрытиеФормСлужебныйКлиентСервер.ТипыТестов();
	ТипыТестовМетаданных = Новый Структура;
	КоллекцииМетаданных = Новый Массив;
	
	Для Каждого Запись Из ДанныеМакета Цикл
		
		КоллекцииМетаданных.Добавить(Запись.Имя);
		ТипыТестовКоллекции = Новый Массив;
		
		Для Каждого ТипТеста Из ТипыТестов Цикл
			Если Запись[ТипТеста.Ключ] = "+" Тогда
				ТипыТестовКоллекции.Добавить(ТипТеста.Ключ);
			КонецЕсли;
		КонецЦикла;
		
		ТипыТестовМетаданных.Вставить(Запись.Имя, ТипыТестовКоллекции);
		
	КонецЦикла;
	
	ПараметрыЗагрузки.Вставить("КоллекцииМетаданных", КоллекцииМетаданных);
	ПараметрыЗагрузки.Вставить("ТипыТестовМетаданных", ТипыТестовМетаданных);
	
КонецПроцедуры

Процедура ЗагрузитьПараметрыТиповТестов(ПараметрыЗагрузки)
	
	ПараметрыТиповТестов = ДТОткрытиеФормСлужебныйКлиентСервер.ПараметрыТиповТестов();
	ПараметрыЗагрузки.Вставить("ПараметрыТиповТестов", ПараметрыТиповТестов);
	
КонецПроцедуры

Функция ПараметрыТипаТеста(Имя, Право)
	
	Возврат Новый Структура("Имя, Право", Имя, Право);
	
КонецФункции

Функция БазоваяНастройка()
	
	Настройка = Новый Структура;
	Настройка.Вставить("Использовать", Истина);
	Настройка.Вставить("НаборыИсключений", Новый Массив);
	
	// Типы тестов, см. ДТОткрытиеФорм.ТипыТестов
	Настройка.Вставить("Новый", Истина);
	Настройка.Вставить("Существующий", Истина);
	Настройка.Вставить("Скопированный", Истина);
	Настройка.Вставить("Список", Истина);
	Настройка.Вставить("Выбор", Истина);
	
	Настройка.Вставить("НоваяГруппа", Истина);
	Настройка.Вставить("СуществующаяГруппа", Истина);
	Настройка.Вставить("СкопированнаяГруппа", Истина);
	Настройка.Вставить("ВыборГруппы", Истина);
	
	Настройка.Вставить("Основная", Истина);
	Настройка.Вставить("Настройки", Истина);
	Настройка.Вставить("Варианты", Истина);
	
	// Типы форм
	Настройка.Вставить("ОбычныеФормы", Истина);
	Настройка.Вставить("УправляемыеФормы", Истина);
	
	Возврат Настройка;
	
КонецФункции

Функция ПереопределеннаяНастройка(БазоваяНастройка, Ключ)
	
	ТекущаяНастройка = ЮТКоллекции.ЗначениеСтруктуры(БазоваяНастройка, Ключ);
	
	Если ТекущаяНастройка = Неопределено Тогда
		Возврат БазоваяНастройка;
	КонецЕсли;
	
	Настройка = БазоваяНастройка();
	ЗаполнитьЗначенияСвойств(Настройка, БазоваяНастройка);
	
	ТипНастройки = ТипЗнч(ТекущаяНастройка);
	Если ТипНастройки = Тип("Булево") Тогда
		ТекущаяНастройка = Новый Структура("Использовать", ТекущаяНастройка);
	ИначеЕсли ТекущаяНастройка.Свойство("Исключения") И ЗначениеЗаполнено(ТекущаяНастройка.Исключения) Тогда
		Исключения = ЮТДымовыеТестыСлужебныйКлиентСервер.НормализованнаяНастройкаИсключений(ТекущаяНастройка.Исключения);
		НаборыИсключений = ЮТКоллекции.СкопироватьМассив(Настройка.НаборыИсключений, Ложь);
		НаборыИсключений.Добавить(Исключения);
		Настройка.НаборыИсключений = НаборыИсключений;
	КонецЕсли;
	
	ЮТКоллекции.ДополнитьСтруктуру(Настройка, ТекущаяНастройка);
	
	Возврат Настройка;
	
КонецФункции

#КонецОбласти

#Область ПостроениеДереваТестов

Функция ОбработатьКоллекциюМетаданных(ИмяКоллекции, НастройкаКоллекции, ПараметрыЗагрузки)
	
	Коллекция = Метаданные[ИмяКоллекции];
	ОписанияОбъектов = Новый Массив;
	ТипыТестовКоллекции = ПараметрыЗагрузки.ТипыТестовМетаданных[ИмяКоллекции];
	
	Для Каждого ОбъектМетаданных Из Коллекция Цикл
		
		Если НЕ ПравоДоступа("Просмотр", ОбъектМетаданных)
			ИЛИ ЮТДымовыеТестыСлужебныйКлиентСервер.ПодходитПодНаборыИсключений(ОбъектМетаданных.Имя, НастройкаКоллекции.НаборыИсключений) Тогда
			Продолжить;
		КонецЕсли;
		
		Настройка = ПереопределеннаяНастройка(НастройкаКоллекции, ОбъектМетаданных.Имя);
		
		Если НЕ Настройка.Использовать Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеОбъекта = ОбработатьОбъектМетаданных(ОбъектМетаданных, Настройка, ТипыТестовКоллекции, ПараметрыЗагрузки);
		
		Если ОписаниеОбъекта <> Неопределено Тогда
			ОписанияОбъектов.Добавить(ОписаниеОбъекта);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ОписанияОбъектов;
	
КонецФункции

Функция ОбработатьОбъектМетаданных(Объект, НастройкаОбъекта, ТипыТестовКоллекции, ПараметрыЗагрузки)
	
	ФормыОбъекта = ФормыОбъекта(Объект, ПараметрыЗагрузки, НастройкаОбъекта.УправляемыеФормы, НастройкаОбъекта.ОбычныеФормы);
	ПараметрыТиповТестов = ПараметрыЗагрузки.ПараметрыТиповТестов;
	
	Если НЕ ЗначениеЗаполнено(ФормыОбъекта) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОписаниеОбъекта = Новый Структура("Имя, ТипыТестов", Объект.Имя, Новый Массив);
	
	Для Каждого ТипТеста Из ТипыТестовКоллекции Цикл
		
		ОписаниеФормы = Неопределено;
		ПараметрыТеста = ПараметрыТиповТестов[ТипТеста];
		
		Если НЕ ФормыОбъекта.Свойство(ПараметрыТеста.ВидФормы, ОписаниеФормы) Или НЕ ПравоДоступа(ПараметрыТеста.Право, Объект) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НастройкаОбъекта.Свойство(ОписаниеФормы.Имя) Тогда
			НастройкаФормы = ПереопределеннаяНастройка(НастройкаОбъекта, ОписаниеФормы.Имя);
		ИначеЕсли НастройкаОбъекта.Свойство(ОписаниеФормы.ВидФормы) Тогда
			НастройкаФормы = ПереопределеннаяНастройка(НастройкаОбъекта, ОписаниеФормы.ВидФормы);
		Иначе
			НастройкаФормы = НастройкаОбъекта;
		КонецЕсли;
		
		Если НастройкаФормы.Использовать И ЮТКоллекции.ЗначениеСтруктуры(НастройкаФормы, ТипТеста, Ложь) Тогда
			ОписаниеОбъекта.ТипыТестов.Добавить(ТипТеста);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ОписаниеОбъекта;
	
КонецФункции

#Область ПодборФорм

Функция ФормыОбъекта(Объект, ПараметрыЗагрузки, УправляемыеФормы, ОбычныеФормы)
	
	ВидыФорм = ПараметрыЗагрузки.ВидыФорм;
	ФормыОбъекта = Новый Структура;
	
	Для Каждого ВидФормы Из ВидыФорм Цикл
		
		ОписаниеФормы = ПодходящаяФорма(Объект, ВидФормы, ПараметрыЗагрузки);
		
		Если ОписаниеФормы <> Неопределено И
			(ОписаниеФормы.ЭтоУправляемаяФорма И УправляемыеФормы Или ОписаниеФормы.ЭтоОбычнаяФорма И ОбычныеФормы) Тогда
			ФормыОбъекта.Вставить(ВидФормы, ОписаниеФормы);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ФормыОбъекта;
	
КонецФункции

Функция ПодходящаяФорма(Объект, ВидФормы, ПараметрыЗагрузки)
	
	Основная = "Основная" + ВидФормы;
	Дополнительная = "Дополнительная" + ВидФормы;
	Формы = Новый Структура;
	Формы.Вставить(Основная);
	Формы.Вставить(Дополнительная);
	
	ЗаполнитьЗначенияСвойств(Формы, Объект);
	
	ПодходящиеФормы = Новый Массив;
	Если Формы[Основная] <> Неопределено Тогда
		Форма = Формы[Основная];
		ОписаниеФормы = НовоеОписаниеФормы(ВидФормы, Форма);
		ПодходящиеФормы.Добавить(ОписаниеФормы);
	КонецЕсли;
	
	Если Формы[Дополнительная] <> Неопределено Тогда
		Форма = Формы[Дополнительная];
		ОписаниеФормы = НовоеОписаниеФормы(ВидФормы, Форма);
		ПодходящиеФормы.Добавить(ОписаниеФормы);
	КонецЕсли;
	
	ДоступныеФормы = Новый Массив;
	
	Для Каждого ОписаниеФормы Из ПодходящиеФормы Цикл
		
		Если ФормаДоступна(ОписаниеФормы, ПараметрыЗагрузки) Тогда
			ДоступныеФормы.Добавить(ОписаниеФормы);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ОписаниеФормы Из ДоступныеФормы Цикл
		
		Если ПараметрыЗагрузки.ЭтоОбычноеПриложение И ОписаниеФормы.ЭтоОбычнаяФорма Тогда
			Возврат ОписаниеФормы;
		ИначеЕсли НЕ ПараметрыЗагрузки.ЭтоОбычноеПриложение И ОписаниеФормы.ЭтоУправляемаяФорма Тогда
			Возврат ОписаниеФормы;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ДоступныеФормы) Тогда
		Возврат ДоступныеФормы[0];
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ФормаДоступна(ОписаниеФормы, ПараметрыЗагрузки)
	
	Возврат ОписаниеФормы.ЭтоОбычнаяФорма И ПараметрыЗагрузки.ДоступныОбычныеФормы
		Или ОписаниеФормы.ЭтоУправляемаяФорма И ПараметрыЗагрузки.ДоступныУправляемыеФормы;
	
КонецФункции

Функция НовоеОписаниеФормы(ВидФормы, Форма)
	
	Описание = ОписаниеФормы();
	
	Описание.Имя = Форма.Имя;
	Описание.ВидФормы = ВидФормы;
	
	Описание.ЭтоОбычнаяФорма = Форма.ТипФормы = Метаданные.СвойстваОбъектов.ТипФормы.Обычная;
	Описание.ЭтоУправляемаяФорма = Форма.ТипФормы = Метаданные.СвойстваОбъектов.ТипФормы.Управляемая;
	
	Возврат Описание;
	
КонецФункции

Функция ОписаниеФормы()
	
	Описание = Новый Структура;
	Описание.Вставить("Имя", "");
	Описание.Вставить("ВидФормы", "");
	Описание.Вставить("ЭтоОбычнаяФорма", Ложь);
	Описание.Вставить("ЭтоУправляемаяФорма", Ложь);
	
	Возврат Описание;
	
КонецФункции

#КонецОбласти

Функция ОписаниеОбъекта(Имя, Формы)
	
	Описание = Новый Структура;
	Описание.Вставить("Имя", Имя);
	Описание.Вставить("Формы", Формы);
	
	Возврат Описание;
	
КонецФункции

Функция ОписаниеВидаФормы(Вид, Объекта = Ложь, Группы = Ложь, Списка = Ложь, Выбора = Ложь)
	
	Описание = Новый Структура;
	Описание.Вставить("Вид", Вид);
	Описание.Вставить("ЭтоФормаОбъекта", Объекта);
	Описание.Вставить("ЭтоФормаГруппы", Группы);
	Описание.Вставить("ЭтоФормаСписка", Списка);
	Описание.Вставить("ЭтоФормаВыбора", Выбора);
	
	Возврат Описание;
	
КонецФункции

#КонецОбласти

#КонецОбласти

